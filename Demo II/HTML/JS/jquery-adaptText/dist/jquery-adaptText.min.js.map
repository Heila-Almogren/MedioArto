{"version":3,"sources":["jquery-adaptText.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAdaptTextEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","throttle","func","wait","_this","_now","Date","now","getTime","timeout","context","args","result","previous","later","apply","_len","arguments","length","params","Array","_key","remaining","clearTimeout","setTimeout","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","compression","max","Number","POSITIVE_INFINITY","min","NEGATIVE_INFINITY","scrollable","scrollSpeed","scrollResetSpeed","onResizeEvent","instances","viewportWidth","window","width","adaptText","element","options","$element","extend","data","isDisabled","_init","value","resize","_scrollOnHover","push","_trigger","that","css","overflow","text-overflow","white-space","hover","distance","scrollWidth","Math","sqrt","stop","animate","text-indent","floor","parseFloat","eventType","_len2","_key2","concat","trigger","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","force","each","isPlainObject"],"mappings":"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","file":"jquery-adaptText.min.js","sourcesContent":["/**\n* jQuery AdaptText v1.3.4\n* https://github.com/amazingSurge/jquery-adaptText\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  compression: 10,\n  max: Number.POSITIVE_INFINITY,\n  min: Number.NEGATIVE_INFINITY,\n  scrollable: false,\n  scrollSpeed: 1000,\n  scrollResetSpeed: 300,\n  onResizeEvent: true\n};\n\nfunction throttle(func, wait) {\n  const _now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  let timeout;\n  let context;\n  let args;\n  let result;\n  let previous = 0;\n  let later = function() {\n    previous = _now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) {\n      context = args = null;\n    }\n  };\n\n  return (...params) => {\n    /*eslint consistent-this: \"off\"*/\n    let now = _now();\n    let remaining = wait - (now - previous);\n    context = this;\n    args = params;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) {\n        context = args = null;\n      }\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\nconst NAMESPACE$1 = 'adaptText';\n\nconst instances = [];\nlet viewportWidth = $(window).width();\n\n/**\n * Plugin constructor\n **/\nclass adaptText {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $(element);\n\n    // options\n    this.options = $.extend(true, {}, DEFAULTS, options, this.$element.data());\n\n    this.width = this.$element.width();\n\n    this.isDisabled = false;\n\n    this._init();\n  }\n\n  _init() {\n    this.resize();\n\n    if (this.options.scrollable) {\n      this._scrollOnHover();\n    }\n\n    instances.push(this);\n\n    this._trigger('ready');\n  }\n\n  _scrollOnHover() {\n    /* eslint consistent-return: \"off\" */\n    const that = this;\n\n    this.$element.css({\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis',\n      'white-space': 'nowrap'\n    });\n    this.$element.hover(() => {\n      const distance = that.element.scrollWidth - that.$element.width();\n\n      if (distance > 0) {\n        const scrollSpeed = Math.sqrt(distance / that.width) * that.options.scrollSpeed;\n\n        that.$element.css('cursor', 'e-resize');\n        return that.$element.stop().animate({\n          \"text-indent\": -distance\n        }, scrollSpeed, () => that.$element.css('cursor', 'text'));\n      }\n    }, () => that.$element.stop().animate({\n      \"text-indent\": 0\n    }, that.options.scrollResetSpeed));\n  }\n\n  resize() {\n    if(this.isDisabled === true) {\n      return;\n    }\n    this.width = this.$element.width();\n    if (this.width === 0) {\n      return;\n    }\n\n    this.$element.css('font-size', Math.floor(Math.max(\n      Math.min(this.width / (this.options.compression), parseFloat(this.options.max)),\n      parseFloat(this.options.min)\n    )));\n  }\n\n  enable() {\n    if (this.isDisabled === true) {\n      this.isDisabled = false;\n    }\n\n    this._trigger('enable');\n  }\n\n  disable() {\n    if (this.isDisabled === false) {\n      this.isDisabled = true;\n    }\n\n    this._trigger('disable');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  static resize(force) {\n    if (!force && $(window).width() === viewportWidth) {\n      return;\n    }\n    viewportWidth = $(window).width();\n\n    $.each(instances, function() {\n      if (this.options.onResizeEvent) {\n        this.resize();\n      }\n    });\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nif (window.addEventListener) {\n  window.addEventListener(\"resize\", throttle(adaptText.resize, 200), false);\n} else if (window.attachEvent) {\n  window.attachEvent(\"onresize\", throttle(adaptText.resize, 200));\n}\n\nvar info = {\n  version:'1.3.4'\n};\n\nconst NAMESPACE = 'adaptText';\nconst OtherAdaptText = $.fn.adaptText;\n\nconst jQueryAdaptText = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new adaptText(this, options));\n    }\n  });\n};\n\n$.fn.adaptText = jQueryAdaptText;\n\n$.adaptText = $.extend({\n  setDefaults: adaptText.setDefaults,\n  noConflict: function() {\n    $.fn.adaptText = OtherAdaptText;\n    return jQueryAdaptText;\n  }\n}, info);\n"]}