@font-face {
    font-family: "fonts/Muli-ExtraLightItalic";
    src: url("fonts/Muli-ExtraLightItalic.ttf") format("truetype");
}

@font-face {
    font-family: "Muli-Reg";
    src: url("fonts/Muli.ttf") format("truetype");
}

#myVideo {
  position: fixed;
  right: 0;
  bottom: 0;
  min-width: 100%;
  min-height: 100%;
}

.content {
  position: fixed;
  color: #f1f1f1;
  width: 100%;
  padding: 20px;
   
}


div.titleDiv {
    font-size: 80px;
    font-family: "Muli-Reg";
    text-shadow: 0 0 10px #FFFFFF, 0 0 5px #FFFFFF;
    position: fixed;
    top:50%;
}

.nav {
  background-color: rgba(0, 0, 0, 0.5);
  overflow: hidden;
position:fixed;
    top:0;
    left:0;
    width:100%;
    font-family: "Muli-Reg";
}

.logo {
  width: 95px;
  height: 45px;
}

.nav a {
  float: right;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

.nav a:hover {
  background-color: #ddd;
  color: black;
}

.nav a.active {
  background-color: #4CAF50;
  color: white;
}





.cid-rQFasF3NdF {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #2e2e2e;
}
@media (max-width: 767px) {
  .cid-rQFasF3NdF .content {
    text-align: center;
  }
  .cid-rQFasF3NdF .content > div:not(:last-child) {
    margin-bottom: 2rem;
  }
}
@media (max-width: 767px) {
  .cid-rQFasF3NdF .media-wrap {
    margin-bottom: 1rem;
  }
}
.cid-rQFasF3NdF .media-wrap .mbr-iconfont-logo {
  font-size: 7.5rem;
  color: #f36;
}
.cid-rQFasF3NdF .media-wrap img {
  height: 6rem;
}
@media (max-width: 767px) {
  .cid-rQFasF3NdF .footer-lower .copyright {
    margin-bottom: 1rem;
    text-align: center;
  }
}
.cid-rQFasF3NdF .footer-lower hr {
  margin: 1rem 0;
  border-color: #fff;
  opacity: .05;
}
.cid-rQFasF3NdF .footer-lower .social-list {
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  -webkit-justify-content: flex-end;
}
.cid-rQFasF3NdF .footer-lower .social-list .mbr-iconfont-social {
  font-size: 1.3rem;
  color: #fff;
}
.cid-rQFasF3NdF .footer-lower .social-list .soc-item {
  margin: 0 .5rem;
}
.cid-rQFasF3NdF .footer-lower .social-list a {
  margin: 0;
  opacity: .5;
  -webkit-transition: .2s linear;
  transition: .2s linear;
}
.cid-rQFasF3NdF .footer-lower .social-list a:hover {
  opacity: 1;
}
@media (max-width: 767px) {
  .cid-rQFasF3NdF .footer-lower .social-list {
    justify-content: center;
    -webkit-justify-content: center;
  }
}









//---------------------------------------------------
// CHANGE THESE
$series: 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'
$duration: 0.5
$transition: 1

//---------------------------------------------------
// APPEND EXTRA ITEM - An extra item is needed if the series is of odd length
@if abs(length($series)) % 2 == 1
  $lastItem: nth($series, 1)
  $series: append($series, $lastItem)

//---------------------------------------------------
// DON'T TOUCH THESE
$seriesLength: length($series)
$seriesSplitLength: $seriesLength / 2
$itemDuration: $duration + $transition
$twiceItemDuration: $itemDuration * 2
$totalDuration: $itemDuration * $seriesLength

//---------------------------------------------------
// STYLE STUFF
body
  background: #44baa8

.text
  position: absolute
  left: 50%
  top: 50%
  color: yellow
  font-size: 300px
  filter: url(#gooey)
      
  &::before, &::after
    position: absolute
    opacity: 0
    transform: translate(-50%,-50%)
    animation-duration: $totalDuration + s
    animation-timing-function: ease
    animation-iteration-count: infinite
    filter: blur(9px)

  &::before
    content: nth($series, $seriesLength - 1)
    animation-name: items-odd

  &::after
    content: nth($series, $seriesLength)
    animation-name: items-even
    animation-delay: $itemDuration + s

//---------------------------------------------------
// TRANSITION ANIMATIONS

=keyframes($index)
  @for $i from 1 through $seriesLength
    #{percentage((1 / $seriesLength) * $i - ($duration / $totalDuration))}
      opacity: abs($i) % 2
    #{percentage((1 / $seriesLength) * $i)}
      opacity: abs($i) % 2
  @for $i from 1 through $seriesSplitLength
    $item: $i * 2 - $index
    #{percentage(($i - 1) * (1 / $seriesSplitLength))}
      content: nth($series, $item)
    #{percentage($i * (1 / $seriesSplitLength) - 0.000001)}
      content: nth($series, $item)

@keyframes items-odd
  +keyframes(1)

@keyframes items-even
  +keyframes(0)